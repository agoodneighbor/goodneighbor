<div class="navBar">
	<div id="menu" class="hamberger">
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="40"
			height="40"
			fill="currentColor"
			class="bi bi-list"
			viewBox="0 0 16 16"
		>
			<path
				fill-rule="evenodd"
				d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z"
			/>
		</svg>
	</div>
	
	
	<div class="Logo"><i class="fa-solid fa-people-roof"></i>
		<div class="Logo-title">이웃사촌</div>
	</div>	
	<div class="navMenu"onclick="findProduct();">
		<div class="menu find">Find</div>
		<div class="menu icon"><i class="fa-solid fa-magnifying-glass"></i></div>
	</div>
	


	<div class="LoginMenu">
		<% if(is_login) { %>
		<div>logout</div>
		<% } else { %>
		<div class="Login" onclick="Login()">Login</div>
		<div class="Assign" onclick="Assign()">Assign</div>
		<% } %>
	</div>
</div>

<div id="side_menu" class="side">
	<div class="menu" style="margin-left: 0; margin-top: 30px">
		<i class="fa-solid fa-magnifying-glass"></i>
	</div>
</div>

<div id="modal_window" class="modal_back">
	<div class="modalPage"><%- include("Login.ejs") %></div>
</div>

<div id="modal_window_Assign" class="modal_back">
	<div class="modalPage"><%- include("Assign.ejs") %></div>
</div>

<script type="text/javascript">
	var user = {};
	$(".hamberger").click(() => {
		$(".side").css({
			left: "0px",
		});
	});
	$(function () {
		//Keep track of last scroll
		var lastScroll = 0;
		$(window).scroll(function (event) {
			//Sets the current scroll position
			var st = $(this).scrollTop();
			//Determines up-or-down scrolling
			if (st > lastScroll) {
				//Replace this with your function call for downward-scrolling
				$(".navBar").css({
					top: "-80px",
					transition: "1s",
				});
			} else {
				//Replace this with your function call for upward-scrolling
				let height = $(".mainBar").height();
				if ($(this).scrollTop() < height) {
					$(".navBar").css({
						top: "0px",
						transition: "1s",
						"background-color": "transparent",
					});
				} else {
					$(".navBar").css({
						top: "0px",
						transition: "1s",
						"background-color": "white",
					});
				}
			}
			//Updates scroll position
			lastScroll = st;
		});
	});
	const Login = () => {
		$("#modal_window").show();
	};
	var map = undefined;
	const Assign = () => {
		$("#modal_window_Assign").show();
		var container = document.getElementById("map"); //지도를 담을 영역의 DOM 레퍼런스
		var options = {
			//지도를 생성할 때 필요한 기본 옵션
			center: new kakao.maps.LatLng(33.450701, 126.570667), //지도의 중심좌표.
			level: 3, //지도의 레벨(확대, 축소 정도)
		};
		map = new kakao.maps.Map(container, options);
	};
	const close_Assign = () => {
		$("#modal_window_Assign").hide();
	};
	const closeModal = () => {
		$("#modal_window").hide();
	};
	const openAssign = () => {
		$("#modal_window").hide();
		$("#modal_window_Assign").show();
		var container = document.getElementById("map"); //지도를 담을 영역의 DOM 레퍼런스
		var options = {
			//지도를 생성할 때 필요한 기본 옵션
			center: new kakao.maps.LatLng(33.450701, 126.570667), //지도의 중심좌표.
			level: 3, //지도의 레벨(확대, 축소 정도)
		};
		map = new kakao.maps.Map(container, options);
	};
	$("#b").click(function () {
		$(".detail_user").animate({ scrollTop: 40 }, 1000);
	});
	var check = undefined;
	console.log(sessionStorage.key.length);
	var string = undefined;
	const CheckPoint = (obj) => {
		string = $("#checkpoint").val().split("/");
		let add_string = "";
		for (let i = 0; i < string.length; i++) {
			add_string += string[i] + " ";
		}
		console.log(add_string);
		var geocoder = new kakao.maps.services.Geocoder();
		// 주소로 좌표를 검색합니다
		geocoder.addressSearch(add_string, function (result, status) {
			// 정상적으로 검색이 완료됐으면
			if (status === kakao.maps.services.Status.OK) {
				var coords = new kakao.maps.LatLng(result[0].y, result[0].x);
				// 결과값으로 받은 위치를 마커로 표시합니다
				var marker = new kakao.maps.Marker({
					map: map,
					position: coords,
				});
				// 인포윈도우로 장소에 대한 설명을 표시합니다
				var infowindow = new kakao.maps.InfoWindow({
					content:
						'<div style="width:150px;text-align:center;padding:6px 0;">내 위치</div>',
				});
				infowindow.open(map, marker);
				check = "결정하기";
				if (string.length < 3) {
					check = "다시입력하세요";
				}
				var okbutton = $("#OkButton").html(
					`<button onclick="takeplace()" class="custom-btn btn-3"><span>${check}</span></button>`
				);
				// 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
				map.setCenter(coords);
			}
		});
	};
	const takeplace = () => {
		if (check == "결정하기") {
			user["시"] = string[0];
			user["구"] = string[1];
			user["동"] = string[2];
			console.log(user);
			$("#OkButton").click(function () {
				$(".detail_user").animate({ scrollTop: 470 }, 1000);
			});
		}
	};
	function isId(asValue) {
		var regExp = /^[a-z]+[a-z0-9]{5,19}$/g;

		return regExp.test(asValue);
	}
	function isPassword(asValue) {
		var regExp =
			/^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\(\\)\-_=+]).{8,16}$/;

		return regExp.test(asValue); // 형식에 맞는 경우 true 리턴
	}
	const submitButton = () => {
		user["id"] = $("#ID").val();
		user["password"] = $("#password").val();
		user["name"] = $("#name").val();
		let isokayId = true;
		let isokayPw = true;
		// if(!isId(user["id"])){
		//     isokayId=false;
		// }
		// if(!isPassword(user["password"])){
		//     isokayPw=false;
		// }
		if (isokayId && isokayPw) {
			axios({
				url: "/api/assign",
				method: "post",
				// post방식 일때는 params가 data로 변경
				data: user,
			})
				.then((response) => {
					console.log(response);
					if (response.data) {
						alert("회원가입 성공");
						$("#modal_window_Assign").hide();
					} else {
						alert("다시하셈");
					}
				})
				.catch((error) => {
					console.log(error);
				});
		} else {
			alert(`아이디 형식 : ${isokayId}
            비밀번호 형식 : ${isokayPw}`);
		}
	};
	const Log_in_to = () => {
		let Login_val_Id = $("#Login_Id").val();
		let Login_val_Pw = $("#Login_Pw").val();
		let Login_data = {
			id: Login_val_Id,
			pw: Login_val_Pw,
		};
		axios({
			url: "/api/login",
			method: "post",
			// post방식 일때는 params가 data로 변경
			data: Login_data,
		})
			.then((response) => {
				console.log(response);
				if (response.data) {
					alert("로그인 성공");
					$("#modal_window_Assign").hide();
					location.href = "/";
				} else {
					alert("아이디 혹은 비밀번호를 다시 입력하세요");
				}
			})
			.catch((error) => {
				console.log(error);
			});
	};

	function findProduct(){
		alert('click');
	};
</script>
