<!DOCTYPE html>
<html lang="en">

<head>
	<%- include("Head.ejs") %>
		<link rel="stylesheet" href="../static/css/Profile.css" />
		<link rel="stylesheet" href="../static/css/chat.css" />
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
			integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
			crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body class="profile-body">
	<%- include("navBar.ejs") %>
		<div class="show-profile">
			<div class="profile-img">
				<div class="profile-inner-img">
					<div class="member-img">
						<img src="/static/img/member-icon.svg" alt="member-icon" />
					</div>
					<div class="member-name">멤버이름</div>
				</div>
			</div>
			<div class="profile-info">
				<div class="profile-member-big-name">멤버 큰 이름(상점 이름)</div>
				<div class="seller-info">
					<div class="openDate">
						<img class="seller-icon" src="/static/img/market-open.png" />상점
						오픈 날짜
					</div>
					<div class="shop-visitor">
						<img class="seller-icon" src="/static/img/visitor.png" />상점 방문객
						수
					</div>
					<div class="sales-counter">
						<img class="seller-icon" src="/static/img/bag.png" />상품 판매 횟수
					</div>
					<div class="delivery-counter">
						<img class="seller-icon" src="/static/img/delivery.png" />택배 발송
						횟수
					</div>
				</div>
				<div class="introduce-myself"></div>
				<div class="change-my-introduce">소개글 수정</div>
			</div>
		</div>
		<div class="ButtonList">
			<div class="btnDiv" onclick="change()">체팅방 리스트</div>
			<div class="btnDiv" onclick="fire()">회원탈퇴</div>
			<div class="btnDiv" onclick="Jimm()">찜 리스트 보기</div>
			<div class="btnDiv" onclick="Myproduct()">내상품 보기</div>
		</div>
		<div id="ClickPage" class="ClickPage"></div>

		<div id="modal_window_chat" class="modal_back">
			<div class="modalPage">
				<div class="chat_box">
					<div id="close_chat" class="c_b">
						<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
							class="bi bi-x-lg" viewBox="0 0 16 16">
							<path
								d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
						</svg>
					</div>

					<div class="messages">
					</div>
					<div class="textbox">
						<input type="text" id="chat-cont" />
						<button id="send-message" onclick="MsgSend()">Send</button>
					</div>
				</div>
			</div>

		</div>
		<%- include("footer.ejs")%>
			<script>
				const change = () => {
					var cell = document.getElementById("ClickPage");
					while (cell.hasChildNodes()) {
						cell.removeChild(cell.firstChild);
					}
					axios({
						url: "/api/takechatlist",
						method: "get",
						// post방식 일때는 params가 data로 변경
					})
						.then((response) => {
							console.log(response.data);
							for (let i = 0; i < response.data.takeroom.length; i++) {
								$("#ClickPage").append(`<div class="chat-name-div" data-value="${response.data.takeroom[i]}" onclick="goRoom(this)">${response.data.ananta[i]}<div class="chat-name">${response.data.takeroom[i].room_name}</div></div>`)
							}
						})
						.catch((error) => {
							// console.log(error);
						});
				};
				$("#close_chat").click(() => {
					window.location.reload();
				})
				var roomname = undefined;
				const goRoom = (obj) => {
					$("#modal_window_chat").show();
					socket = io.connect();
					//console.log('obj',obj)
					//console.log('$obj',$(obj))
					roomname = $(obj).children(".chat-name").text();
					//console.log(roomname);
					axios({
						url: "/api/takecontent",
						method: "get",
						params: { member_id: roomname },
					}).then((result) => {
						console.log(result.data);
						let chatcont = result.data.content.chat_content.split("//")
						// console.log("chatcontent", chatcont)
						for (let i of chatcont) {
							// console.log('hcat', i)
							if (Number(i.split("&&")[0]) == Number(result.data.mynum)) {
								$(".messages").append(`<div class="message my-message">
								<div>
									<div class="text">${i.split("&&")[1]}</div>
								</div>
							</div>`);
							} else {
								$(".messages").append(`<div class="message other-message">
								<div>
									<div class="text">${i.split("&&")[1]}</div>
								</div>
							</div> `);
							}
						}
						let chatBox = document.querySelector(".messages");
						chatBox.scrollTo(0, chatBox.scrollHeight)
						socket.emit("roomentry", result.data.roomname);
					});
					$("#chat-cont").on("keyup", (key) => {
						console.log(key.target.value);

						if (key.keyCode == 13) {
							if ($("#chat-cont").val().trim() != '') {
								socket.emit("sendto", { roomname: roomname, msg: key.target.value })
								$(".messages").append(`<div class="message my-message">
							<div>
								<div class="text">${key.target.value}</div>
							</div>
						</div>`)
								axios({
									url: "/api/storechat",
									method: "post",
									data: { key: key, content: key.target.value, roomname: roomname }
								}).then((result) => {
									console.log("콘솔로그", result.data);
									socket.emit("roomentry", "hi im entry");
								});
								$("#chat-cont").val("")
								let chatBox = document.querySelector(".messages");
								chatBox.scrollTo(0, chatBox.scrollHeight)
							}
						}
					});
					socket.on("recieve", (msg) => {
						console.log("recieve", msg)
						$(".messages").append(`<div class="message other-message">
						<div>
							<div class="text">${msg}</div>
						</div>
					</div> `)
						let chatBox = document.querySelector(".messages");
						chatBox.scrollTo(0, chatBox.scrollHeight)
					})

				}


				const Jimm = () => {
					var cell = document.getElementById("ClickPage");
					while (cell.hasChildNodes()) {
						cell.removeChild(cell.firstChild);
					}
					axios({
						url: "/jimm",
						method: "get",
						// post방식 일때는 params가 data로 변경
						params: { data: "Jimm" },
					})
						.then((response) => {
							console.log(response.data);
							$(".ClickPage").append(`
							<div class="overflow-hidden">
								<div id="ProductRow"></div>
							</div>`);
							var html = "<div class='product-item'>";
							let productsInfo = response.data.dataValues;
							let productsImg = response.data.img;
							for (let i = 0; i < productsInfo.length; i++) {
								let arr = ["교환", "나눔"];
								html += `<div class="product-item-window">
								<img class="mypimg" src="${productsImg[i]}" alt="" />
								<div class="product-info-wrapper">
									<div class="product-name">${productsInfo[i]["Product.product_name"]}</div>
									<div class="product-price-wrapper">
										<div class="product-price">${productsInfo[i]["Product.product_price"]}</div>
									</div>
								</div>
							</div>`;
							}
							html += `</div>`;
							$("#ProductRow").html(html);
						})
						.catch((error) => {
							// console.log(error);
						});
					$(".ClickPage").append(`<div id="ProductRow" class="row g-4"></div>`);
					$("#ProductRow").append(
						`<div class="col-3">
						<div class="MyPimg p-3 border bg-light">Custom column padding</div>
						</div>`
					);
				};

				const Myproduct = () => {
					var cell = document.getElementById("ClickPage");
					while (cell.hasChildNodes()) {
						cell.removeChild(cell.firstChild);
					}
					axios({
						url: "/myproduct",
						method: "get",
						// post방식 일때는 params가 data로 변경
						params: { data: "myproduct" },
					})
						.then((response) => {
							console.log("response.data :", response.data);
							$(".ClickPage").append(`
							<div class="overflow-hidden">
								<div id="ProductRow"></div>
							</div>
						`);
							var html = "<div class='product-item'>";
							for (let i of response.data) {
								// console.log()
								let str = String(new Date(i.product_time)).split(" ");
								let updateTime = new Date(i.product_time).getDay();
								let arr = ["교환", "나눔"];
								html += `<div class="product-item-window">
								<img class="mypimg" src="${i.product_img_src}" alt="" />
								<div class="product-info-wrapper">
									<div class="product-name">${i.product_name}</div>
									<div class="product-price-wrapper">
										<div class="product-price">${arr[i.product_price]}</div>
											<div class="product-upload-time">
												${updateTime + "월" + " " + str[2] + "일"}
											</div>
										</div>
									</div>
								</div>
							`;
							}
							html += `</div>`;
							$("#ProductRow").html(html);
						})
						.catch((error) => {
							console.log(error);
						});
				};
				const fire = () => {
					var cell = document.getElementById("ClickPage");
					while (cell.hasChildNodes()) {
						cell.removeChild(cell.firstChild);
					}
					if (confirm("진짜? 진짜 삭제 할거임?")) {
						("삭제");
					}
				};
			</script>
</body>

</html>