<!DOCTYPE html>
<html lang="en">

<head>
	<%- include("Head.ejs") %>
		<link rel="stylesheet" href="../static/css/Profile.css" />
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
			integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
			crossorigin="anonymous" referrerpolicy="no-referrer" />
		<link href="/static/css/chat.css" rel="stylesheet" />
</head>

<body class="profile-body">
	<%- include("navBar.ejs") %>
		<div class="show-profile">
			<div class="profile-img">
				<div class="profile-myimg" ></div>
				<div class="profile-my">
					상점1234
				</div>
			</div>
			<div class="profile-info">
				<div>상점1234</div>
				<!-- <div>상점 1일차 이런거 할수도??</div> -->
				<textarea name="iam" id="IAM" placeholder="소개글"></textarea>
				<button class="profile-upload" type="button">수정</button>
				<button  class="profile-upload"type="button">저장</button>
			</div>
		</div>



		<div class="ButtonList">
			<div class="btnDiv" onclick="change()">체팅방 리스트</div>
			<div class="btnDiv" onclick="fire()">회원탈퇴</div>
			<div class="btnDiv" onclick="Jimm()">찜 리스트 보기</div>
			<div class="btnDiv" onclick="Myproduct()">내상품 보기</div>
		</div>
		<div id="ClickPage" class="ClickPage"></div>

		<div id="modal_window_chat" class="modal_back">
			<div class="modalPage">
				<div class="chat_box">
					<div id="close_chat" class="c_b">
						<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
							class="bi bi-x-lg" viewBox="0 0 16 16">
							<path
								d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z" />
						</svg>
					</div>
					<div class="chat_content">

					</div>
					<input type="text" id="chat-cont">
				</div>
			</div>
		</div>

		<script>

			const change = () => {
				var cell = document.getElementById("ClickPage");
				while (cell.hasChildNodes()) {
					cell.removeChild(cell.firstChild);
				}
				axios({
					url: "/api/takechatlist",
					method: "get",
					// post방식 일때는 params가 data로 변경
				})
					.then((response) => {
						console.log(response.data);
						for (let i of response.data) {
							$("#ClickPage").append(`<div value="${i.room_name}" onclick="goRoom(this)">${i.room_name}</div>`)
						}
					})
					.catch((error) => {
						// console.log(error);
					});
			};
			$("#close_chat").click(()=>{
				window.location.reload()
			})
			var roomname=undefined;
			const goRoom = (obj) => {
				$("#modal_window_chat").show();
				socket = io.connect()
				console.log('obj',obj)
				console.log('$obj',$(obj))
				roomname = $(obj)[0].textContent;
				console.log(roomname);
				axios({
					url: "/api/takecontent",
					method: "get",
					params: { member_id: roomname }
				}).then((result) => {
					console.log(result.data);
					socket.emit("roomentry", result.data.roomname);
				});
				$("#chat-cont").on("keyup", (key) => {
					// console.log(key);
					if (key.keyCode == 13) {
						socket.emit("sendto",{roomname:roomname,msg:key.target.value})
						$(".chat_content").append(`<div>${key.target.value}</div>`)
						axios({
							url: "/api/storechat",
							method: "post",
							data: { content: key.target.value,roomname:roomname }
						}).then((result) => {
							console.log(result.data);
							socket.emit("roomentry", "hi im entry");
						});
					}
				});
				socket.on("recieve",(msg)=>{
					console.log("recieve",msg)
				})

			}
			


			const Jimm = () => {
				var cell = document.getElementById("ClickPage");
				while (cell.hasChildNodes()) {
					cell.removeChild(cell.firstChild);
				}
				axios({
					url: "/jimm",
					method: "get",
					// post방식 일때는 params가 data로 변경
					params: { data: "Jimm" },
				})
					.then((response) => {
						// console.log(response.data);
					})
					.catch((error) => {
						// console.log(error);
					});
				$(".ClickPage").append(`<div id="ProductRow" class="row g-4">
                  </div>`);
				$("#ProductRow").append(`<div class="col-3">
                    <div class="MyPimg p-3 border bg-light">Custom column padding</div>
                  </div>`)
			}
			const Myproduct = () => {
				var cell = document.getElementById("ClickPage");
				while (cell.hasChildNodes()) {
					cell.removeChild(cell.firstChild);
				}
				axios({
					url: "/myproduct",
					method: "get",
					// post방식 일때는 params가 data로 변경
					params: { data: "myproduct" }
				}).then((response) => {
					console.log(response.data);
					$(".ClickPage").append(`<div class="overflow-hidden">
                            <div id="ProductRow">
                            </div>
                          </div>`)
					var html = "<div class='product-item'>";
					for (let i of response.data) {
						let str = String(new Date(i.product_time)).split(" ");
						let arr = ["교환", "나눔"]
						html += `
                                <div class="product-item-window">
                                    <img class="mypimg" src="${i.product_img_src}" alt="">    
                                    
                                    <div class="product-info-wrapper">
                                        <div class="product-name">${i.product_name
							}</div>
                                        <div class="product-price-wrapper">
                                            <div class="product-price">${arr[i.product_price]}</div>
                                            <div class="product-upload-time">${new Date(i.product_time).getDay() + "월" + " " + str[2] + "일"}</div>
                                        </div>
                                    </div>
                                </div>
                            `;
					}
					html += `</div>`;
					$("#ProductRow").html(html);
				})
					.catch((error) => {
						console.log(error);
					});
			}
			const fire = () => {
				var cell = document.getElementById("ClickPage");
				while (cell.hasChildNodes()) {
					cell.removeChild(cell.firstChild);
				}
				if (confirm("진짜? 진짜 삭제 할거임?")) {
					"삭제"
				}
			}
		</script>
</body>

</html>